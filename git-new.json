{
    "local": [
        {
            "type": "validate-branch-names",
            "parameters": {
                "branches": ["$params.branchName", "$params.upstreamBranches"]
            }
        },
        {
            "type": "assert-existence",
            "parameters": {
                "branches": ["$params.branchName"],
                "shouldExist": false
            }
        },
        {
            "type": "assert-existence",
            "parameters": {
                "branches": ["$params.upstreamBranches"],
                "shouldExist": true
            }
        },
        {
            "id": "simplify-upstream",
            "type": "simplify-upstream",
            "parameters": {
                "upstreamBranches": ["$params.upstreamBranches"]
            }
        },
        {
            "id": "set-upstream",
            "type": "set-upstream",
            "parameters": {
                "upstreamBranches": {
                    "$params.branchName": ["$actions['simplify-upstream'].outputs"]
                },
                "message": "Add branch $($params.branchName)$($params.comment ? \" for $($params.comment)\" : '')"
            }
        },
        {
            "id": "createBranch",
            "type": "merge-branches",
            "parameters": {
                "upstreamBranches": ["$actions['simplify-upstream'].outputs"],
                "mergeMessageTemplate": "Merge '{}' for creation of $($params.branchName)"
            }
        },
        { 
            "type": "add-diagnostic",
            "condition": "$actions.createBranch.outputs.failed -ne $null",
            "parameters": {
                "isWarning": true,
                "message": "$($params.branchName) has incoming conflicts from $($actions.createBranch.outputs.failed). Be sure to manually merge."
            }
        }
    ],
    "finalize": [
        {
            "type": "set-branches",
            "parameters": {
                "branches": {
                    "$config.upstreamBranch": "$actions['set-upstream'].outputs['commit']",
                    "$params.branchName": "$actions.createBranch.outputs['commit']"
                }
            }
        },
        {
            "type": "track",
            "parameters": {
                "branches": ["$params.branchName"],
                "createIfNotTracked": true
            }
        },
        {
            "type": "checkout",
            "parameters": {
                "HEAD": "$params.branchName"
            }
        }
    ],
    "output": [
        "Switched to branch '$($params.branchName)'"
    ]
}
